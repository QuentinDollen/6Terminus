je (pierre-gilles) garde la du code qui sert plus mais que je trouve interessant au cas où on en ait besoin plus tard
def add_bat(x,y,id_bat):
    match (id_bat):
        case 0: globals()["Herb"+x+y] = h.Herb(x,y)
        case 92: bat1 = wa.Well(x,y)
        case 90: globals()["Reservoir"+x+y] = wa.Reservoir(x,y)
        case 91: globals()["Fountain"+x+y] = wa.Fountain(x,y)
        case 8: globals()["Aquaduct"+x+y] = wa.Aquaduct(x,y)
        case 81: globals()["EngineersPost"+x+y] = eng.EngineersPost(x,y)
        case 55: globals()["Prefecture"+x+y] = sec.Prefecture(x,y)
        
        
 if(prec_x == -1 or prec_y == 1):    # cas du premier appel: il n'y a pas de case précedente #en vrai ce cas n'est pas necessaire parce que -1 est de toute façon different du reste, mais je l'ai fait pour me mettre les idées au clair
        if(isPath(x+1,y,Mat)):
            (x1,y1) = next_case(x+1,y,destx,desty,x,y,Mat,t+1)
        if(isPath(x,y+1,Mat)):
            (x2,y2) = next_case(x,y+1,destx,desty,x,y,Mat,t+1)
        if(isPath(x-1,y,Mat)):
            (x3,y3) = next_case(x-1,y,destx,desty,x,y,Mat,t+1)
        if(isPath(x-1,y,Mat)):
            (x4,y4) = next_case(x,y-1,destx,desty,x,y,Mat,t+1)
        if(isPath(x+1,y,Mat) == 0 and isPath(x,y+1,Mat) == 0 and isPath(x-1,y,Mat)== 0 and isPath(x-1,y,Mat) == 0):
            return(-1,-1)
    else:                               # cas de n'importe quel autre appel, il y a une case precedente, et il faut pas appeler la fonction dessus

